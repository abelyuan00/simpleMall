<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.simpleMall.Dao.UserDao">
    <resultMap type="com.example.simpleMall.Entity.Customer" id="CustomerResult">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="loginName" column="login_name"/>
        <result property="password" column="password"/>
    </resultMap>

    <resultMap type="com.example.simpleMall.Entity.Customer" id="CustomerListResult">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="loginName" column="login_name"/>
        <result property="status" jdbcType="VARCHAR" column="status"/>
        <result property="membershipLevel" jdbcType="VARCHAR" column="membership_level"/>
        <result property="createdTime" column="created_time"/>
        <result property="updateTime" column="update_time"/>

    </resultMap>

    <resultMap id="AdminResult" type="com.example.simpleMall.Entity.Admin" >
        <id property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="createdTime" column="created_time"/>
        <result property="loginName" jdbcType="VARCHAR" column="login_name"/>
        <result property="password" jdbcType="VARCHAR" column="password"/>
        <result property="role" jdbcType="VARCHAR" column="role"/>
        <result property="status" jdbcType="VARCHAR" column="status"/>
        <result property="updateTime" column="update_time"/>
        <result property="adminCode" jdbcType="VARCHAR" column="admin_code"/>

    </resultMap>

    <sql id="Base_Column_List">
        id,login_name,code,password,admin_code,role,status,created_time
    </sql>



    <insert id="insertCustomer" parameterType="com.example.simpleMall.Entity.Customer">
        insert into customer(login_name,name,password,code,role,address,email,status,created_time,update_time)
        values(#{loginName},#{name},#{password},#{code},#{role},#{address},#{email},#{status},CURRENT_TIME,CURRENT_TIME)
    </insert>

    <update id="updateCustomer" parameterType="com.example.simpleMall.Entity.Customer">
        update customer
        set
            name=#{name},password=#{password},update_time=CURRENT_TIME
        where id=#{id}
    </update>

    <delete id="removeCustomer" parameterType="int">
        delete from customer where id=#{id}
    </delete>

    <insert id="insertAdmin" parameterType="com.example.simpleMall.Entity.Admin">
        insert into admin(login_name,password,code,role,status,created_time,update_time)
        values(#{loginName},#{password},#{code},#{role},#{status},CURRENT_TIME,CURRENT_TIME)
    </insert>

    <update id="updateAdmin" parameterType="com.example.simpleMall.Entity.Admin">
        update admin
        set
            password=#{password},update_time=CURRENT_TIME,status=#{status}
        where login_name=#{loginName}
    </update>

    <delete id="removeAdmin" parameterType="long">
        delete from admin where id=#{id}
    </delete>


    <select id="findCustomer" parameterType="String" resultMap="CustomerResult">
        select * from customer
        where login_name = #{loginName,jdbcType=VARCHAR}
    </select>

    <select id="findCustomerById" resultMap="CustomerResult">
        select * from customer
        where id = #{customerId,jdbcType=BIGINT}
    </select>

    <select id="findAdmin" resultMap="AdminResult">
        select * from admin
        where login_name = #{loginName,jdbcType=VARCHAR}
    </select>

    <select id="findAdminById" resultMap="AdminResult">
        select * from admin
        where id = #{adminId,jdbcType=BIGINT}
    </select>

    <select id="getCustomerList" parameterType="Map" resultMap="CustomerListResult">
        select * from customer
        order by id desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>


    <select id="getTotalCustomer" parameterType="Map" resultType="int">
        select count(*) from customer
    </select>

</mapper>
